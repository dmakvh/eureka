note:* in the following table, instanceID will be the EC2 instance id (e.g. "i-flde9e99"), or hostName if you're running outside of EC2 (i.e. DC / desktop)
|| *Operation* || *HTTP action* || *Notes* ||
| Register new application instance | {{POST /discovery/v2/apps/}}{{{}{_}appID{_}}} | Input: JSON/XML payload \\
HTTP Code: 200 on success |
| De-register application instance | {{DELETE /discovery/v2/apps/}}{{{}{_}appID{_}{}}}{{/}}{{{}{_}instanceID{_}}} | HTTP Code: 200 on success |
| Send application instance heartbeat | {{PUT /discovery/v2/apps/}}{{{}{_}appID{_}{}}}{{/}}{{{}{_}instanceID{_}}} | HTTP Code:
* 200 on success
* 205 if any direct dependencies changed
* 404 if instanceID doesn't exist --- [{{platform.jar}}|http://go/platform.jar] will automatically register itself. |
| Query for all active app instances | {{GET /discovery/v2/apps}} | HTTP Code: 200 on success \\
Output: JSON/XML (example below) --- list of lists |
| Query for all appID instances | {{GET /discovery/v2/apps/}}{{{}{_}appID{_}}} | HTTP Code: 200 on success \\
Output: JSON/XML (example below) --- list |
| Query for a specific appID/instanceID | {{GET /discovery/v2/apps/}}{{{}{_}appID{_}{}}}{{/}}{{{}{_}instanceID{_}}} | HTTP Code: 200 on success \\
Output: JSON/XML (example below) |
| Query for a specific instanceID | {{GET /discovery/v2/instances/}}{{{}{_}instanceID{_}}} | HTTP Code: 200 on success \\
Output: JSON/XML (example below) --- list |
| Take instance "out of service" | {{PUT&nbsp; /discovery/v2/apps/}}{{{}{_}appID{_}}} {{/}}{{{}{_}instanceID{_}}} {{/status?value=OUT_OF_SERVICE}} | HTTP Code:
* 200 on success
* 406 on failure |
| Put instance back into service | {{PUT /discovery/v2/apps/}}{{{}{_}appID{_}}} {{/}}{{{}{_}instanceID{_}}} {{/status?value=UP}} | HTTP Code:
* 200 on success
* 406 on failure |
